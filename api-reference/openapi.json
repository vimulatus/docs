{
  "openapi": "3.0.0",
  "paths": {
    "/company": {
      "post": {
        "operationId": "CompanyController_createCompany",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create a company",
        "tags": [
          "Company"
        ]
      },
      "get": {
        "operationId": "CompanyController_getAllCompaniesByUser",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "description": "The id of the user for which the companies are to be fetched",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllCompaniesResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get all companies by user",
        "tags": [
          "Company"
        ]
      }
    },
    "/company/{id}": {
      "get": {
        "operationId": "CompanyController_getCompany",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The id of the company",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get a company by id",
        "tags": [
          "Company"
        ]
      }
    },
    "/company/default": {
      "get": {
        "operationId": "CompanyController_getDefaultCompany",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "query",
            "description": "The id of the user for which the default company is to be fetched",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Default Company not found"
          }
        },
        "summary": "Get the default company for a user",
        "tags": [
          "Company"
        ]
      }
    },
    "/company/migrate/{companyId}": {
      "patch": {
        "operationId": "CompanyController_migrate",
        "parameters": [
          {
            "name": "companyId",
            "required": true,
            "in": "path",
            "description": "The id of the company to be migrated",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "204": {
            "description": ""
          }
        },
        "summary": "Migrate a company",
        "tags": [
          "Company"
        ]
      }
    },
    "/user": {
      "post": {
        "operationId": "UserController_createUser",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create a user",
        "tags": [
          "User"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_getUserById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get a user by id",
        "tags": [
          "User"
        ]
      }
    },
    "/user/{email}": {
      "get": {
        "operationId": "UserController_getUserByEmail",
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get a user by email",
        "tags": [
          "User"
        ]
      }
    },
    "/groups": {
      "get": {
        "operationId": "GroupController_getGroups",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCompanyGroupsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get all groups in a company",
        "tags": [
          "Company / Group"
        ]
      },
      "post": {
        "operationId": "GroupController_createGroup",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGroupResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create a group",
        "tags": [
          "Company / Group"
        ]
      }
    },
    "/roles/{id}": {
      "get": {
        "operationId": "RoleController_findById",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get a role by id",
        "tags": [
          "Company / Role"
        ]
      }
    },
    "/roles": {
      "post": {
        "operationId": "RoleController_create",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRoleResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create a role",
        "tags": [
          "Company / Role"
        ]
      },
      "get": {
        "operationId": "RoleController_findAll",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllRolesResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get all roles",
        "tags": [
          "Company / Role"
        ]
      }
    },
    "/accounts": {
      "post": {
        "operationId": "AccountController_create",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create an account",
        "tags": [
          "Company / Account"
        ]
      },
      "get": {
        "operationId": "AccountController_findAll",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filter by account name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllAccountsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get all accounts",
        "tags": [
          "Company / Account"
        ]
      }
    },
    "/accounts/{id}": {
      "get": {
        "operationId": "AccountController_findById",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get an account by id",
        "tags": [
          "Company / Account"
        ]
      }
    },
    "/inventory/item/{id}": {
      "get": {
        "operationId": "ItemController_find",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get an item by id",
        "tags": [
          "Company / Item"
        ]
      },
      "delete": {
        "operationId": "ItemController_deleteById",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDto"
                }
              }
            }
          }
        },
        "summary": "Delete an item by id",
        "tags": [
          "Company / Item"
        ]
      }
    },
    "/inventory/item/{sku}": {
      "get": {
        "operationId": "ItemController_findBySku",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sku",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get an item by sku",
        "tags": [
          "Company / Item"
        ]
      },
      "delete": {
        "operationId": "ItemController_deleteBySku",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sku",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDto"
                }
              }
            }
          }
        },
        "summary": "Delete an item by sku",
        "tags": [
          "Company / Item"
        ]
      }
    },
    "/inventory/item/{name}": {
      "get": {
        "operationId": "ItemController_findByName",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get an item by name",
        "tags": [
          "Company / Item"
        ]
      },
      "delete": {
        "operationId": "ItemController_deleteByName",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDto"
                }
              }
            }
          }
        },
        "summary": "Delete an item by name",
        "tags": [
          "Company / Item"
        ]
      }
    },
    "/inventory/item": {
      "get": {
        "operationId": "ItemController_findAll",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllItemsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get all items",
        "tags": [
          "Company / Item"
        ]
      },
      "post": {
        "operationId": "ItemController_create",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create an item",
        "tags": [
          "Company / Item"
        ]
      }
    },
    "/inventory/item/{id}/groups": {
      "get": {
        "operationId": "ItemController_getGroups",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllItemGroupsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get all item groups of an item",
        "tags": [
          "Company / Item"
        ]
      }
    },
    "/item-groups": {
      "post": {
        "operationId": "ItemGroupController_create",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateItemGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemGroupResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create a new item group",
        "tags": [
          "Company / Item Group"
        ]
      },
      "get": {
        "operationId": "ItemGroupController_findAll",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllItemGroupsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get all item groups",
        "tags": [
          "Company / Item Group"
        ]
      }
    },
    "/item-groups/{id}/items": {
      "get": {
        "operationId": "ItemGroupController_findAllItems",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAllItemsResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get all items in a item groups",
        "tags": [
          "Company / Item Group"
        ]
      }
    },
    "/item-groups/{id}/items/{itemId}": {
      "delete": {
        "operationId": "ItemGroupController_removeItemFromGroup",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDto"
                }
              }
            }
          }
        },
        "summary": "Remove an item from a item group",
        "tags": [
          "Company / Item Group"
        ]
      },
      "put": {
        "operationId": "ItemGroupController_addItemToGroup",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "itemId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDto"
                }
              }
            }
          }
        },
        "summary": "Add an item to a item group",
        "tags": [
          "Company / Item Group"
        ]
      }
    },
    "/item-groups/{id}": {
      "get": {
        "operationId": "ItemGroupController_get",
        "parameters": [
          {
            "name": "X-Company-Id",
            "in": "header",
            "description": "The id of the current active company",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItemGroupResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get a item group by id",
        "tags": [
          "Company / Item Group"
        ]
      }
    }
  },
  "info": {
    "title": "ERP API",
    "description": "API for ERP",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "erp",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "LogoOrIcon": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "logo",
              "icon"
            ],
            "description": "The type of the logo or icon",
            "example": "logo"
          },
          "urlOrName": {
            "type": "string",
            "description": "The url or name of the logo or icon",
            "example": "https://example.com/logo.png"
          }
        },
        "required": [
          "type",
          "urlOrName"
        ]
      },
      "CreateCompanyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the company",
            "example": "Acme Corp"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of the company",
            "example": "A company that makes widgets"
          },
          "gstin": {
            "type": "string",
            "nullable": true,
            "description": "The GSTIN of the company",
            "example": "29AAACD1234E1Z5"
          },
          "logoOrIcon": {
            "description": "The logo or lucide icon name of the company",
            "example": {
              "type": "logo",
              "urlOrName": "https://example.com/logo.png"
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/LogoOrIcon"
              }
            ]
          },
          "countryCode": {
            "type": "string",
            "description": "The country code of the company",
            "example": "IN",
            "default": "IN"
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency code of the company",
            "example": "INR",
            "default": "INR"
          },
          "createdById": {
            "type": "string",
            "description": "The id of the user who created the company",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        },
        "required": [
          "name",
          "logoOrIcon",
          "countryCode",
          "currencyCode",
          "createdById"
        ]
      },
      "CompanyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the company",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "The name of the company",
            "example": "Acme Corp"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of the company",
            "example": "A company that makes widgets"
          },
          "gstin": {
            "type": "string",
            "nullable": true,
            "description": "The GSTIN of the company",
            "example": "29AAACD1234E1Z5"
          },
          "logoOrIcon": {
            "$ref": "#/components/schemas/LogoOrIcon"
          },
          "countryCode": {
            "type": "string",
            "description": "The country code of the company",
            "example": "IN",
            "default": "IN"
          },
          "currencyCode": {
            "type": "string",
            "description": "The currency code of the company",
            "example": "INR",
            "default": "INR"
          }
        },
        "required": [
          "id",
          "name",
          "logoOrIcon",
          "countryCode",
          "currencyCode"
        ]
      },
      "GetCompanyResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/CompanyDto"
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "GetAllCompaniesResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyDto"
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The keycloak id of the user",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "The name of the user",
            "example": "John Doe"
          },
          "username": {
            "type": "string",
            "description": "The username of the user",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email of the user",
            "example": "john.doe@example.com"
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Whether the email is verified",
            "example": true
          },
          "phone": {
            "type": "object",
            "description": "The phone number of the user",
            "example": "+919876543210"
          },
          "phoneVerified": {
            "type": "boolean",
            "description": "Whether the phone number is verified",
            "example": true
          },
          "avatar": {
            "type": "object",
            "description": "The avatar of the user",
            "example": "https://example.com/avatar.png"
          }
        },
        "required": [
          "id",
          "name",
          "username",
          "email"
        ]
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the user",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "The name of the user",
            "example": "John Doe"
          },
          "username": {
            "type": "string",
            "description": "The username of the user",
            "example": "john_doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The email of the user",
            "example": "john.doe@example.com"
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Whether the email is verified",
            "example": true
          },
          "gender": {
            "type": "object",
            "description": "The gender of the user",
            "example": "Male"
          },
          "dob": {
            "format": "date-time",
            "type": "string",
            "nullable": true,
            "description": "The date of birth of the user",
            "example": "1990-01-01"
          },
          "phone": {
            "type": "string",
            "nullable": true,
            "format": "mobile-phone",
            "description": "The phone number of the user",
            "example": "+919876543210"
          },
          "phoneVerified": {
            "type": "boolean",
            "description": "Whether the phone number is verified",
            "example": true
          },
          "avatar": {
            "type": "string",
            "nullable": true,
            "format": "uri",
            "description": "The avatar of the user",
            "example": "https://example.com/avatar.png"
          },
          "age": {
            "type": "number",
            "nullable": true,
            "description": "The age of the user",
            "example": 25
          }
        },
        "required": [
          "id",
          "name",
          "username",
          "email",
          "gender",
          "phoneVerified"
        ]
      },
      "GetUserResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "GroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "GetCompanyGroupsResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupDto"
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the group",
            "example": "Marketing Team"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateGroupResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/GroupDto"
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "RoleDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "description"
        ]
      },
      "GetRoleResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/RoleDto"
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateRoleDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the role",
            "example": "Admin"
          },
          "description": {
            "type": "string",
            "description": "The description of the role",
            "example": "Admin role"
          }
        },
        "required": [
          "name"
        ]
      },
      "GetAllRolesResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleDto"
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateAccountDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the account",
            "example": "Jane"
          },
          "groupId": {
            "type": "string",
            "description": "The ID of the group",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "code": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "groupId"
        ]
      },
      "AccountDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the account",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "The name of the account",
            "example": "Cash"
          },
          "code": {
            "type": "string",
            "nullable": true,
            "description": "The charts of account code of the account",
            "example": "110011"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of the account",
            "example": "Cash account"
          },
          "groupId": {
            "type": "string",
            "description": "The group id of the account",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "currencyCode": {
            "type": "string",
            "nullable": true,
            "description": "The currency code of the account",
            "example": "USD",
            "default": "INR"
          }
        },
        "required": [
          "id",
          "name",
          "groupId"
        ]
      },
      "GetAccountResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/AccountDto"
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "GetAllAccountsResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDto"
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "ItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the item",
            "example": "Gold Ring"
          },
          "id": {
            "type": "string",
            "description": "The id of the item",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "sku": {
            "type": "string",
            "description": "The sku of the item",
            "example": "GR-5-10K-101"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of the item",
            "example": "Gold ring with 10K gold and 5mm diameter"
          },
          "unitId": {
            "type": "string",
            "description": "The id of the unit of the item",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "cost": {
            "type": "number",
            "minimum": 0,
            "description": "The cost of the item",
            "example": 100
          },
          "price": {
            "type": "number",
            "minimum": 0,
            "description": "The price of the item",
            "example": 150
          },
          "msp": {
            "type": "number",
            "minimum": 0,
            "description": "The msp of the item",
            "example": 120
          }
        },
        "required": [
          "name",
          "id",
          "sku",
          "unitId",
          "cost",
          "price",
          "msp"
        ]
      },
      "GetItemResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/ItemDto"
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "GetAllItemsResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemDto"
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateItemDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "sku": {
            "type": "string"
          },
          "unitId": {
            "type": "string"
          },
          "cost": {
            "type": "number"
          },
          "price": {
            "type": "number"
          },
          "msp": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "unitId",
          "cost",
          "price"
        ]
      },
      "ResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          }
        },
        "required": [
          "status"
        ]
      },
      "ItemGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the item group",
            "example": "Gold Jewelry"
          },
          "id": {
            "type": "string",
            "description": "The id of the item group",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of the item group",
            "example": "Item Group 1 Description"
          }
        },
        "required": [
          "name",
          "id"
        ]
      },
      "GetAllItemGroupsResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemGroupDto"
            }
          }
        },
        "required": [
          "status",
          "data"
        ]
      },
      "CreateItemGroupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the item group",
            "example": "Electronics"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "The description of the item group",
            "example": "A group of electronics items"
          }
        },
        "required": [
          "name"
        ]
      },
      "GetItemGroupResponseDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "success",
              "error"
            ],
            "example": "success"
          },
          "data": {
            "$ref": "#/components/schemas/ItemGroupDto"
          }
        },
        "required": [
          "status",
          "data"
        ]
      }
    }
  }
}